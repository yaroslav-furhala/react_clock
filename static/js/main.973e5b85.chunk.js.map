{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","Date","toLocaleTimeString","Clock","state","time","clockTimer","this","window","setInterval","setState","console","log","clearInterval","className","props","name","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","intervalId","stopClock","startClock","createNameChangeIntervar","document","addEventListener","_","prevState","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAQ,IAAIC,MAAQC,qBAGf,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAML,KAFV,EAKEM,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEL,KAAML,MAEtBW,QAAQC,IAAI,EAAKR,MAAMC,QACtB,OAZP,kCAeE,WACEQ,cAAcN,KAAKD,cAhBvB,oBAmBE,WACE,OACE,sBAAKQ,UAAU,QAAf,UACE,iCAASP,KAAKQ,MAAMC,OACnB,YACAT,KAAKH,MAAMC,KAHd,mBAIeE,KAAKH,MAAMC,aAzBhC,GAA2BY,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJrB,MAAQ,CACNsB,UAAU,EACVC,UAAWR,K,EAGbS,WAAa,E,EAyBbC,UAAY,WACV,EAAKnB,SAAS,CAAEgB,UAAU,IAC1Bb,cAAc,EAAKe,a,EAGrBE,WAAa,WACN,EAAK1B,MAAMsB,WACd,EAAKhB,SAAS,CAAEgB,UAAU,IAE1B,EAAKE,WAAa,EAAKG,6B,uDAhC3B,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,cAAe1B,KAAKsB,WAC9CG,SAASC,iBAAiB,QAAS1B,KAAKuB,YAExCvB,KAAKqB,WAAapB,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEiB,UAAWR,QAC1B,MACHZ,KAAKqB,WAAarB,KAAKwB,6B,gCAGzB,SAAmBG,EAAOC,GACpBA,EAAUR,YAAcpB,KAAKH,MAAMuB,WAErChB,QAAQC,IAAR,uBAA4BuB,EAAUR,UAAtC,eAAsDpB,KAAKH,MAAMuB,c,kCAIrE,WACEK,SAASI,oBAAoB,cAAe7B,KAAKsB,WACjDG,SAASI,oBAAoB,QAAS7B,KAAKuB,YAC3CjB,cAAcN,KAAKqB,c,sCAgBrB,WAAoC,IAAD,OACjC,OAAOpB,OAAOC,aAAY,WACxB,EAAKC,SAAS,CAAEiB,UAAWR,QAC1B,Q,oBAGL,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCP,KAAKH,MAAMsB,UACV,cAAC,EAAD,CAAOV,KAAMT,KAAKH,MAAMuB,YAE1B,6E,GAzDUV,IAAMC,WA8DTO,IC1EfY,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.973e5b85.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  time: string;\n};\n\nfunction getTime() {\n  return (new Date()).toLocaleTimeString();\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: getTime(),\n  };\n\n  clockTimer = 0;\n\n  componentDidMount() {\n    this.clockTimer = window.setInterval(() => {\n      this.setState({ time: getTime() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockTimer);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.name}</strong>\n        {' time is '}\n        {this.state.time}\n        {` time is ${this.state.time}`}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.stopClock);\n    document.addEventListener('click', this.startClock);\n\n    this.intervalId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    this.intervalId = this.createNameChangeIntervar();\n  }\n\n  componentDidUpdate(_: {}, prevState: { clockName: string }) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.stopClock);\n    document.removeEventListener('click', this.startClock);\n    clearInterval(this.intervalId);\n  }\n\n  stopClock = () => {\n    this.setState({ hasClock: false });\n    clearInterval(this.intervalId);\n  };\n\n  startClock = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n\n      this.intervalId = this.createNameChangeIntervar();\n    }\n  };\n\n  createNameChangeIntervar(): number {\n    return window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n        <p>Righ Click to stop, LeftClick - start</p>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}